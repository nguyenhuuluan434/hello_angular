{"version":3,"sources":["/Users/misko/work/angular/dist/packages-dist/core/bundles/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","Rx","Observable","prototype","this","rxjs_Observable","rxjs_observable_merge","rxjs_operator_share","rxjs_Subject","__extends","d","b","__","constructor","extendStatics","Object","create","TypeDecorator","makeDecorator","name","props","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","call","annotationInstance","cls","annotations","hasOwnProperty","ANNOTATIONS","defineProperty","value","push","makeMetadataCtor","ngMetadataName","annotationCls","args","_i","arguments","length","values","apply","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","PARAMETERS","_a","bind","concat","annotation","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","PROP_METADATA","unshift","ContentChildrenDecorator","ContentChildDecorator","ViewChildrenDecorator","ViewChildDecorator","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","DirectiveDecorator","ComponentDecorator","SimpleChanges","OnChanges","OnInit","DoCheck","OnDestroy","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","ModuleWithProviders","SchemaMetadata","InjectDecorator","OptionalDecorator","InjectableDecorator","SelfDecorator","SkipSelfDecorator","HostDecorator","getSymbolIterator","_symbolIterator","Symbol_1","_global","iterator","keys","getOwnPropertyNames","Map","i","key","scheduleMicroTask","fn","Zone","current","looseIdentical","a","isNaN","stringify","token","Array","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","ForwardRefFn","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","resolveProvider","provider","deps","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE","useValue","useFactory","useExisting","useClass","staticError","multiProviderMixError","recursivelyProcessProviders","records","resolvedProvider","multi","multiProvider","get","MULTI_PROVIDER_FN","set","options","OptionFlags","record","tryResolveToken","parent","notFoundValue","resolveToken","e","Error","path","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","obj","undefined","depRecords","depRecord","childRecord","CheckSelf","CheckParent","NULL_INJECTOR","Optional","Injector","THROW_IF_NOT_FOUND","providerDeps","j","SkipSelf","Self","Inject","formatError","text","charAt","substr","context","parts","JSON","replace","NEW_LINE","getClosureSafeProperty","objWithPropertyToExtract","GET_PROPERTY_NAME","getDebugContext","error","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","console","wrappedError","message","originalError","msg","findFirstClosedCycle","constructResolvingPath","reversed","slice","reverse","tokenStrs","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","first","cyclicDependencyError","instantiationError","originalException","originalStack","invalidProviderError","noAnnotationError","typeOrFunc","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","v","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","parentCtor","ResolvedReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","id","resolvedFactories","forEach","Type","dependencies","params_1","t","_extractToken","some","p","metadata","optional","isArray","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","ValueProvider","ExistingProvider","FactoryProvider","TypeProvider","ClassProvider","isPromise","then","isObservable","subscribe","_appIdRandomProviderFactory","_randomChar","String","fromCharCode","Math","floor","random","_throwError","noComponentFactoryError","component","ERROR_COMPONENT","WtfScopeFn","detectWTF","wtf","trace","events","createScope$1","flags","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","source","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","GetTestability","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","assertPlatform","requiredToken","destroyPlatform","destroy","_callAndReportToErrorHandler","errorHandler","ngZone","result","catch","remove","list","el","splice","DirectRenderer","RendererType2","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","flatten","reduce","flat","item","flatItem","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","element","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","Predicate","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","o","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","IterableDiffer","IterableChanges","IterableChangeRecord","CollectionChangeRecord","TrackByFunction","IterableDifferFactory","getTypeNameForDebugging","KeyValueDiffer","KeyValueChanges","KeyValueChangeRecord","KeyValueDifferFactory","PipeTransform","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","ViewDefinition","asTextData","view","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","err","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","unwrapValue","nodeIdx","bindingIdx","WrappedValue","wrapped","globalBindingIdx","def","bindingIndex","oldValues","createRendererType2","UNDEFINED_RENDERER_TYPE_ID","styles","encapsulation","data","resolveRendererType2","isFilled","ViewEncapsulation","None","_renderCompCount","EMPTY_RENDERER_TYPE_ID","checkBinding","state","ViewState","FirstCheck","checkAndUpdateBinding","checkBindingNoChanges","BeforeFirstCheck","Services","createDebugContext","markParentViewsForCheck","currView","ViewFlags","OnPush","ChecksEnabled","viewContainerParent","markParentViewsForCheckProjectedViews","endView","CheckProjectedViews","dispatchEvent","nodeIndex","eventName","event","nodeDef","startView","NodeFlags","ComponentView","componentView","handleEvent","root","declaredViewContainer","parentView","viewParentEl","renderNode","Types","TypeElement","renderElement","TypeText","renderText","elementEventFullName","isComponentView","Component","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","DepFlags","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","RenderNodeAction","Collect","nextSibling","RemoveChild","renderer","visitSiblingRenderNodes","startIndex","endIndex","TypeNgContent","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","BindingFlags","CatSyntheticProperty","EmbeddedViews","embeddedViews","_embeddedViews","AppendChild","appendChild","InsertBefore","insertBefore","removeChild","splitNamespace","match","NS_PREFIX_RE","calcBindingFlags","bindings","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","anchorDef","templateFactory","template","outputIndex","childFlags","directChildFlags","childMatchedQueries","outputs","ns","attrs","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","_b","bindingDefs","_c","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","TypeElementStyle","TypeElementAttribute","TypeProperty","nonMinifiedName","outputDefs","_e","OutputType","ElementOutput","createElement","elDef","rootSelectorOrNode","selectorOrNode","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","TypeElementClass","setElementClass","setElementStyle","bindView","SyntheticHostProperty","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext","STYLE","unit","setStyle","removeStyle","setProperty","moduleProvideDef","depDefs","moduleDef","providersByKey","initNgModule","_def","provDef","LazyProvider","NOT_CREATED$1","_createProviderInstance$1","resolveNgModuleDep","depDef","Value","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","ngModule","injectable","TypeClassProvider","_createClass","TypeFactoryProvider","_callFactory","TypeUseExistingProvider","TypeValueProvider","len","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","prevView","renderAttachEmbeddedView","vcElementData","dvcElementData","IsProjectedView","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","ProjectedTemplate","nodeFlags","parentNodeDef","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevRenderNode","arr","pop","createComponentFactory","selector","componentType","viewDefFactory","inputs","ngContentSelectors","ComponentFactory_","getComponentViewDefinitionFactory","componentFactory","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","nodeValue","CatProvider","TypePipe","createRendererV1","RendererAdapter","createNgModuleRef","bootstrapComponents","NgModuleRef_","directiveDef","prop","DirectiveOutput","TypeDirective","pipeDef","createProviderInstance","NOT_CREATED","_createProviderInstance","createPipeInstance","allowPrivateServices","createClass","createDirectiveInstance","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","directive","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","PrivateProvider","callFactory","resolveDep","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","cdView","InjectorRefTokenKey","providerDef_1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","binding_1","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","QueryList","queryIds","nodeMatchedQueries","tplDef","end","TypeContentQuery","DynamicQuery","setDirty","TypeViewQuery","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","QueryBindingType","First","All","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","QueryValueType","RenderElement","TemplateRef","ViewContainerRef","Provider","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","TypePurePipe","pureArrayDef","TypePureArray","pureObjectDef","propToIndex","nbKeys","propertyNames","TypePureObject","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","constants","prefix","createText","checkAndUpdateTextInline","_addInterpolationPart","setValue","checkAndUpdateTextDynamic","valueStr","updateDirectives","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","newParent","currentRenderParent","validateNode","CatRenderNode","isPrivateService","isComponent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentFlags","parentEnd","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","disposables","CatInit","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","StaticQuery","CheckType","CheckAndUpdate","checkNoChangesView","markProjectedViewsForCheck","CheckNoChanges","execEmbeddedViewsAction","CheckProjectedView","checkAndUpdateView","checkAndUpdateNode","argStyle","ArgumentType","Inline","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","bindingStart","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroyed","Destroy","destroyNode","destroyViewNodes","callViewAction","viewState","CatDetectChanges","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","RendererFactory2","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","CatProviderNoDirective","has","applyProviderOverridesToElement","elIndex","elementIndicesWithOverwrittenProviders","hasOverrrides","applyProviderOverrides","CatPureExpression","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","Dynamic","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","input","CAMEL_CASE_REGEXP","m","toLowerCase","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","trigger$1","definitions","AnimationMetadataType","Trigger","animate$1","timings","Animate","group$1","steps","Group","sequence$1","Sequence","style$1","tokens","Style","offset","state$1","State","keyframes$1","Keyframes","transition$1","stateChangeExpr","Transition","expr","animation","AnimationMetadata","AnimationTriggerMetadata","AnimationStateMetadata","AnimationTransitionMetadata","AnimationKeyframesSequenceMetadata","AnimationStyleMetadata","AnimationAnimateMetadata","AnimationSequenceMetadata","AnimationGroupMetadata","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","AnimationTransitionEvent","setPrototypeOf","__proto__","__assign","assign","s","n","_desc","enumerable","configurable","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Directive","dir","c","changeDetection","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","Emulated","Version","full","split","VERSION","Injectable","Host","__window","window","__self","WorkerGlobalScope","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","NG_TOKEN_PATH","_records","tokenPath","_console","_findOriginalError","_findContext","errorLogger","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","Function","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","decorators","getOwnMetadata","fill","_ownAnnotations","ownAnnotations","parentAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","displayName","APP_INITIALIZER","ApplicationInitStatus","appInits","_done","_donePromise","Promise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getNgContentSelectors","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","_super","NgModuleRef","NgModuleFactory","wtfEnabled","wtfCreateScope","wtfLeave","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","Subject","NgZone","enableLongStackTrace","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","NgProbeToken","PlatformRef_","_injector","_modules","_destroyListeners","_destroyed","onDestroy","listener","bootstrapModuleFactory","moduleFactory","_bootstrapModuleFactoryWithZone","ngZoneInjector","moduleRef","exceptionHandler","initStatus","donePromise","_moduleDoBootstrap","bootstrapModule","compilerOptions","_bootstrapModuleWithZone","compilerFactory","compiler","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","ApplicationRef_","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_rootComponents","_rootComponentTypes","_views","_runningTick","_enforceNoNewChanges","_stable","tick","isCurrentlyStable","observer","stableSub","unstableSub","_isStable","merge","share","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","componentRef","listeners","_tickScope","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererStyleFlags2","Important","DashCase","Renderer2","NgModuleFactoryLoader","_dirty","_results","_emitter","filter","find","toArray","_SEPARATOR","FACTORY_CLASS_SUFFIX","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","offlineMode","loadFactory","loadAndCompile","System","import","factoryClassSuffix","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","_debugContext","addChild","providerTokens","attributes","classes","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","results","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","ValueUnwrapper","hasWrappedValue","unwrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","ApplicationModule","NONE","HTML","SCRIPT","URL","RESOURCE_URL","CatQuery","SyntheticProperty","Attached","DebugContext","WeakMap","EMPTY_ARRAY","EMPTY_MAP","EMPTY_CONTEXT","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","_view","_viewRef","_component","_elDef","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs","begin","reattach","vcRef","_parentView","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","style","_ngModuleDefFactory","Reference","AnimateChild","AnimateRef","Stagger","AUTO_STYLE","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵValueUnwrapper","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵReflectionCapabilities","ɵDirectRenderer","ɵRenderDebugInfo","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearProviderOverrides","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵregisterModuleFactory","ɵArgumentType","ɵBindingFlags","ɵDepFlags","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵNodeFlags","ɵQueryBindingType","ɵQueryValueType","ɵViewDefinition","ɵViewFlags","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","trigger","group","sequence","keyframes","transition","ɵx","ɵz","ɵba","ɵbe","ɵbb","ɵbd","ɵbc","ɵbf","ɵy","ɵm","ɵn","ɵo","ɵg","ɵf","ɵh","ɵi","ɵj","ɵk","ɵl","ɵb","ɵc","ɵd","ɵe","ɵp","ɵr","ɵq","ɵu","ɵs","ɵt","ɵa","ɵv","ɵw"],"mappings":"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","file":"/Users/misko/work/angular/dist/packages-dist/core/bundles/core.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.6\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Observable'), require('rxjs/observable/merge'), require('rxjs/operator/share'), require('rxjs/Subject')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'rxjs/Observable', 'rxjs/observable/merge', 'rxjs/operator/share', 'rxjs/Subject'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx));\n}(this, (function (exports,rxjs_Observable,rxjs_observable_merge,rxjs_operator_share,rxjs_Subject) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0-beta.6\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    /**\n     * @param {?} _desc\n     */\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    Object.defineProperty(InjectionToken.prototype, \"ngMetadataName\", {\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        get: function () { return 'InjectionToken'; },\n        enumerable: true,\n        configurable: true\n    });\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\nfunction TypeDecorator() { }\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                ((cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    ((DecoratorFactory)).annotationCls = DecoratorFactory;\n    return (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = ((ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        ((ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                ((cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ((ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = ((PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                ((constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    ((PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\nfunction ContentChildrenDecorator() { }\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\nfunction ContentChildDecorator() { }\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\nfunction ViewChildrenDecorator() { }\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\nfunction ViewChildDecorator() { }\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n     * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n     */\n    OnPush: 0,\n    /**\n     * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n     */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n     * `CheckOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    CheckOnce: 0,\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    Checked: 1,\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    CheckAlways: 2,\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    Detached: 3,\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    Errored: 4,\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction DirectiveDecorator() { }\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction ComponentDecorator() { }\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A `changes` object whose keys are property names and\n * values are instances of {\\@link SimpleChange}. See {\\@link OnChanges}\n * \\@stable\n * @record\n */\nfunction SimpleChanges() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called when any data-bound property of a directive changes.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnChanges'}\n *\n * \\@description\n * `ngOnChanges` is called right after the data-bound properties have been checked and before view\n * and content children are checked if at least one of them has changed.\n * The `changes` parameter contains the changed properties.\n *\n * See {\\@linkDocs guide/lifecycle-hooks#onchanges \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction OnChanges() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called after data-bound properties of a directive are\n * initialized.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnInit'}\n *\n * \\@description\n * `ngOnInit` is called right after the directive's data-bound properties have been checked for the\n * first time, and before any of its children have been checked. It is invoked only once when the\n * directive is instantiated.\n *\n * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction OnInit() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called when Angular dirty checks a directive.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='DoCheck'}\n *\n * \\@description\n * `ngDoCheck` gets called to check the changes in the directives in addition to the default\n * algorithm. The default change detection algorithm looks for differences by comparing\n * bound-property values by reference across change detection runs.\n *\n * Note that a directive typically should not use both `DoCheck` and {\\@link OnChanges} to respond to\n * changes on the same input, as `ngOnChanges` will continue to be called when the default change\n * detector detects changes.\n *\n * See {\\@link KeyValueDiffers} and {\\@link IterableDiffers} for implementing custom dirty checking\n * for collections.\n *\n * See {\\@linkDocs guide/lifecycle-hooks#docheck \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction DoCheck() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called when a directive, pipe or service is destroyed.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='OnDestroy'}\n *\n * \\@description\n * `ngOnDestroy` callback is typically used for any custom cleanup that needs to occur when the\n * instance is destroyed.\n *\n * See {\\@linkDocs guide/lifecycle-hooks \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction OnDestroy() { }\n/**\n *\n * \\@whatItDoes Lifecycle hook that is called after a directive's content has been fully\n * initialized.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentInit'}\n *\n * \\@description\n * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction AfterContentInit() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called after every check of a directive's content.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterContentChecked'}\n *\n * \\@description\n * See {\\@linkDocs guide/lifecycle-hooks#aftercontent \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction AfterContentChecked() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called after a component's view has been fully\n * initialized.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewInit'}\n *\n * \\@description\n * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction AfterViewInit() { }\n/**\n * \\@whatItDoes Lifecycle hook that is called after every check of a component's view.\n * \\@howToUse\n * {\\@example core/ts/metadata/lifecycle_hooks_spec.ts region='AfterViewChecked'}\n *\n * \\@description\n * See {\\@linkDocs guide/lifecycle-hooks#afterview \"Lifecycle Hooks Guide\"}.\n *\n * \\@stable\n * @record\n */\nfunction AfterViewChecked() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\nfunction SchemaMetadata() { }\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via\n     * {@link Component#styles} or {@link Component#styleUrls}, and adding the new Host Element\n     * attribute to all selectors.\n     *\n     * This is the default option.\n     */\n    Emulated: 0,\n    /**\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    Native: 1,\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = (function () {\n    /**\n     * @param {?} full\n     */\n    function Version(full) {\n        this.full = full;\n    }\n    Object.defineProperty(Version.prototype, \"major\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.full.split('.')[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Version.prototype, \"minor\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.full.split('.')[1]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Version.prototype, \"patch\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.full.split('.').slice(2).join('.'); },\n        enumerable: true,\n        configurable: true\n    });\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.0.0-beta.6');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction InjectDecorator() { }\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction OptionalDecorator() { }\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction InjectableDecorator() { }\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction SelfDecorator() { }\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction SkipSelfDecorator() { }\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\nfunction HostDecorator() { }\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    ((Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\nfunction ForwardRefFn() { }\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    ((forwardRefFn)).__forward_ref__ = forwardRef;\n    ((forwardRefFn)).toString = function () { return stringify(this()); };\n    return (((forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return ((type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    return Injector;\n}());\nInjector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nInjector.NULL = new _NullInjector();\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = ({});\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n/** @enum {number} */\nvar OptionFlags = {\n    Optional: 1,\n    CheckSelf: 2,\n    CheckParent: 4,\n    Default: 6,\n};\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    /**\n     * @param {?} providers\n     * @param {?=} parent\n     */\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = function () {\n        var /** @type {?} */ tokens = ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = ((provider)).useValue;\n    }\n    else if (((provider)).useFactory) {\n        fn = ((provider)).useFactory;\n    }\n    else if (((provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if (((provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef(((provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: OptionFlags.Default });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & OptionFlags.CheckSelf ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, \n                    // A record which describes how to resolve the token.\n                    // If undefined, this means we don't have such a record\n                    childRecord, \n                    // Other records we know about.\n                    records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & OptionFlags.CheckParent) ? NULL_INJECTOR : parent, options & OptionFlags.Optional ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = ((fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = ((provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = OptionFlags.Default;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | OptionFlags.Optional;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~OptionFlags.CheckSelf;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~OptionFlags.CheckParent;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = ((annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (((provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef(((provider)).useExisting);\n        deps = [{ token: token, options: OptionFlags.Default }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return ((error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return ((error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return ((error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    ((error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     * @param {?} token\n     * @param {?} id\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n    }\n    Object.defineProperty(ReflectiveKey.prototype, \"displayName\", {\n        /**\n         * Returns a stringified token.\n         * @return {?}\n         */\n        get: function () { return stringify(this.token); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @return {?} the number of keys registered in the system.\n         */\n        get: function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ var Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    /**\n     * @param {?=} reflect\n     */\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (((type)).parameters && ((type)).parameters !== parentCtor.parameters) {\n            return ((type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = ((type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && ((type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(((type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (((typeOrFunc)).annotations && ((typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = ((typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (((typeOrFunc)).decorators && ((typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(((typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return ((typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (((typeOrFunc)).propMetadata &&\n            ((typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = ((typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (((typeOrFunc)).propDecorators &&\n            ((typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = ((typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return ((typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = function (name) { return (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return (new Function('o', 'args', functionBody));\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    /**\n     * @param {?} reflectionCapabilities\n     */\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    /**\n     * @param {?} key\n     * @param {?} optional\n     * @param {?} visibility\n     */\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\nfunction ResolvedReflectiveProvider() { }\nvar ResolvedReflectiveProvider_ = (function () {\n    /**\n     * @param {?} key\n     * @param {?} resolvedFactories\n     * @param {?} multiProvider\n     */\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    /**\n     * @param {?} factory\n     * @param {?} dependencies\n     */\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && ((b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     * @param {?} _providers\n     * @param {?=} _parent\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this._parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"parent\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        inj._parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this._parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_._parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    return ReflectiveInjector_;\n}());\nReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value for a token.\n * \\@howToUse\n * ```\n * const provider: ValueProvider = {provide: 'someToken', useValue: 'someValue'};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='ValueProvider'}\n *\n * \\@stable\n * @record\n */\nfunction ValueProvider() { }\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `useClass` for a token.\n * \\@howToUse\n * ```\n * \\@Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService, deps: []};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='StaticClassProvider'}\n *\n * Note that following two providers are not equal:\n * {\\@example core/di/ts/provider_spec.ts region='StaticClassProviderDifference'}\n *\n * \\@stable\n * @record\n */\n\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of a token.\n * \\@howToUse\n * ```\n * \\@Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: MyClass, deps: []};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n *\n * \\@stable\n * @record\n */\n\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value of another `useExisting` token.\n * \\@howToUse\n * ```\n * const provider: ExistingProvider = {provide: 'someToken', useExisting: 'someOtherToken'};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='ExistingProvider'}\n *\n * \\@stable\n * @record\n */\nfunction ExistingProvider() { }\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return a value by invoking a `useFactory`\n * function.\n * \\@howToUse\n * ```\n * function serviceFactory() { ... }\n *\n * const provider: FactoryProvider = {provide: 'someToken', useFactory: serviceFactory, deps: []};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='FactoryProvider'}\n *\n * Dependencies can also be marked as optional:\n * {\\@example core/di/ts/provider_spec.ts region='FactoryProviderOptionalDeps'}\n *\n * \\@stable\n * @record\n */\nfunction FactoryProvider() { }\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `Type` when `Type' is used\n * as token.\n * \\@howToUse\n * ```\n * \\@Injectable()\n * class MyService {}\n *\n * const provider: TypeProvider = MyService;\n * ```\n *\n * \\@description\n *\n * Create an instance by invoking the `new` operator and supplying additional arguments.\n * This form is a short form of `TypeProvider`;\n *\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='TypeProvider'}\n *\n * \\@stable\n * @record\n */\nfunction TypeProvider() { }\n/**\n * \\@whatItDoes Configures the {\\@link Injector} to return an instance of `useClass` for a token.\n * \\@howToUse\n * ```\n * \\@Injectable()\n * class MyService {}\n *\n * const provider: ClassProvider = {provide: 'someToken', useClass: MyService};\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/provider_spec.ts region='ClassProvider'}\n *\n * Note that following two providers are not equal:\n * {\\@example core/di/ts/provider_spec.ts region='ClassProviderDifference'}\n *\n * \\@stable\n * @record\n */\nfunction ClassProvider() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    /**\n     * @param {?} appInits\n     */\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this._done = false;\n        this._donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            _this._done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    Object.defineProperty(ApplicationInitStatus.prototype, \"done\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._done; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationInitStatus.prototype, \"donePromise\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._donePromise; },\n        enumerable: true,\n        configurable: true\n    });\n    return ApplicationInitStatus;\n}());\nApplicationInitStatus.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nApplicationInitStatus.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n]; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    return Console;\n}());\nConsole.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nConsole.ctorParameters = function () { return []; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = (function () {\n    /**\n     * @param {?} ngModuleFactory\n     * @param {?} componentFactories\n     */\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n     * the template of the given component.\n     * This is used by the `upgrade` library to compile the appropriate transclude content\n     * in the AngularJS wrapper component.\n     *\n     * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n     * @param {?} component\n     * @return {?}\n     */\n    Compiler.prototype.getNgContentSelectors = function (component) { throw _throwError(); };\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = function (type) { };\n    return Compiler;\n}());\nCompiler.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nCompiler.ctorParameters = function () { return []; };\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    ((error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    return ComponentFactoryResolver;\n}());\nComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\nvar CodegenComponentFactoryResolver = (function () {\n    /**\n     * @param {?} factories\n     * @param {?} _parent\n     * @param {?} _ngModule\n     */\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    /**\n     * @param {?} factory\n     * @param {?} ngModule\n     */\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\nfunction WtfScopeFn() { }\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = ((_global) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope$1(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope$1 : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {\\@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param {?=} isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(rxjs_Subject.Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    /**\n     * @param {?} __0\n     */\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueue in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (((Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork(((Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && ((Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(((Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n        return ((((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n        return ((((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = function (fn) {\n        return ((((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\n\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    /**\n     * @param {?} _ngZone\n     */\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.isStable = function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    Testability.prototype.whenStable = function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n    /**\n     * @param {?} using\n     * @param {?} provider\n     * @param {?} exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    return Testability;\n}());\nTestability.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nTestability.ctorParameters = function () { return [\n    { type: NgZone, },\n]; };\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?} testability\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n    /**\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n    /**\n     * @param {?} elem\n     * @param {?=} findInAncestors\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    return TestabilityRegistry;\n}());\nTestabilityRegistry.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nTestabilityRegistry.ctorParameters = function () { return []; };\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\nfunction GetTestability() { }\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = (function () {\n    /**\n     * @param {?} name\n     * @param {?} token\n     */\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n * @abstract\n */\nvar PlatformRef = (function () {\n    function PlatformRef() {\n    }\n    return PlatformRef;\n}());\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nvar PlatformRef_ = (function (_super) {\n    __extends(PlatformRef_, _super);\n    /**\n     * @param {?} _injector\n     */\n    function PlatformRef_(_injector) {\n        var _this = _super.call(this) || this;\n        _this._injector = _injector;\n        _this._modules = [];\n        _this._destroyListeners = [];\n        _this._destroyed = false;\n        return _this;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformRef_.prototype, \"destroyed\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    PlatformRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @return {?}\n     */\n    PlatformRef_.prototype.bootstrapModuleFactory = function (moduleFactory) {\n        return this._bootstrapModuleFactoryWithZone(moduleFactory);\n    };\n    /**\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    PlatformRef_.prototype._bootstrapModuleFactoryWithZone = function (moduleFactory, ngZone) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        if (!ngZone)\n            ngZone = new NgZone({ enableLongStackTrace: isDevMode() });\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { /** @type {?} */ return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef_.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n    };\n    /**\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @param {?=} ngZone\n     * @return {?}\n     */\n    PlatformRef_.prototype._bootstrapModuleWithZone = function (moduleType, compilerOptions, ngZone) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler(Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef_.prototype._moduleDoBootstrap = function (moduleRef) {\n        var /** @type {?} */ appRef = (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    return PlatformRef_;\n}(PlatformRef));\nPlatformRef_.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nPlatformRef_.ctorParameters = function () { return [\n    { type: Injector, },\n]; };\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n * @abstract\n */\nvar ApplicationRef = (function () {\n    function ApplicationRef() {\n    }\n    return ApplicationRef;\n}());\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nvar ApplicationRef_ = (function (_super) {\n    __extends(ApplicationRef_, _super);\n    /**\n     * @param {?} _zone\n     * @param {?} _console\n     * @param {?} _injector\n     * @param {?} _exceptionHandler\n     * @param {?} _componentFactoryResolver\n     * @param {?} _initStatus\n     */\n    function ApplicationRef_(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = _super.call(this) || this;\n        _this._zone = _zone;\n        _this._console = _console;\n        _this._injector = _injector;\n        _this._exceptionHandler = _exceptionHandler;\n        _this._componentFactoryResolver = _componentFactoryResolver;\n        _this._initStatus = _initStatus;\n        _this._bootstrapListeners = [];\n        _this._rootComponents = [];\n        _this._rootComponentTypes = [];\n        _this._views = [];\n        _this._runningTick = false;\n        _this._enforceNoNewChanges = false;\n        _this._stable = true;\n        _this._enforceNoNewChanges = isDevMode();\n        _this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new rxjs_Observable.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new rxjs_Observable.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        _this._isStable = rxjs_observable_merge.merge(isCurrentlyStable, rxjs_operator_share.share.call(isStable));\n        return _this;\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype.attachView = function (viewRef) {\n        var /** @type {?} */ view = ((viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype.detachView = function (viewRef) {\n        var /** @type {?} */ view = ((viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef_.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory = ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this._rootComponentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this._rootComponents.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef_.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this._rootComponents, componentRef);\n    };\n    /**\n     * @return {?}\n     */\n    ApplicationRef_.prototype.tick = function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef_._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ApplicationRef_.prototype.ngOnDestroy = function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef_.prototype, \"viewCount\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"componentTypes\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._rootComponentTypes; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"components\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._rootComponents; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ApplicationRef_.prototype, \"isStable\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._isStable; },\n        enumerable: true,\n        configurable: true\n    });\n    return ApplicationRef_;\n}(ApplicationRef));\n/**\n * \\@internal\n */\nApplicationRef_._tickScope = wtfCreateScope('ApplicationRef#tick()');\nApplicationRef_.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nApplicationRef_.ctorParameters = function () { return [\n    { type: NgZone, },\n    { type: Console, },\n    { type: Injector, },\n    { type: ErrorHandler, },\n    { type: ComponentFactoryResolver, },\n    { type: ApplicationInitStatus, },\n]; };\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = (function () {\n    /**\n     * @param {?} id\n     * @param {?} templateUrl\n     * @param {?} slotCount\n     * @param {?} encapsulation\n     * @param {?} styles\n     * @param {?} animations\n     */\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\nfunction DirectRenderer() { }\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\nfunction RendererType2() { }\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ElementRef = (function () {\n    /**\n     * @param {?} nativeElement\n     */\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this._dirty = true;\n        this._results = [];\n        this._emitter = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"changes\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._emitter; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = function () { return ((this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten(res);\n        this._dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = function () { this._emitter.emit(this); };\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = function () { this._dirty = true; };\n    Object.defineProperty(QueryList.prototype, \"dirty\", {\n        /**\n         * internal\n         * @return {?}\n         */\n        get: function () { return this._dirty; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = function () {\n        this._emitter.complete();\n        this._emitter.unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = (function () {\n    /**\n     * @param {?} _compiler\n     * @param {?=} config\n     */\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    return SystemJsNgModuleLoader;\n}());\nSystemJsNgModuleLoader.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nSystemJsNgModuleLoader.ctorParameters = function () { return [\n    { type: Compiler, },\n    { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n]; };\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    /**\n     * @param {?} name\n     * @param {?} callback\n     */\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    \n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\nfunction Predicate() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    /**\n     * @param {?} wrapped\n     */\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.unwrap = function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    /**\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.reset = function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    /**\n     * @param {?} previousValue\n     * @param {?} currentValue\n     * @param {?} firstChange\n     */\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    /**\n     * @param {?=} trackByFn\n     */\n    function DefaultIterableDiffer(trackByFn) {\n        this._length = 0;\n        this._collection = null;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"collection\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._collection; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && ((nextIt.currentIndex)) <\n                    getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            this._length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this._length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this._length = index;\n        }\n        this._truncate(record);\n        this._collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    /**\n     * @param {?} item\n     * @param {?} trackById\n     */\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    /**\n     * @param {?} key\n     */\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\nfunction IterableDiffer() { }\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\nfunction IterableChanges() { }\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\nfunction IterableChangeRecord() { }\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\nfunction CollectionChangeRecord() { }\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\nfunction TrackByFunction() { }\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\nfunction IterableDifferFactory() { }\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    /**\n     * @param {?} factories\n     */\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\nfunction KeyValueDiffer() { }\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\nfunction KeyValueChanges() { }\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\nfunction KeyValueChangeRecord() { }\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\nfunction KeyValueDifferFactory() { }\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    /**\n     * @param {?} factories\n     */\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * To create a Pipe, you must implement this interface.\n *\n * Angular invokes the `transform` method with the value of a binding\n * as the first argument, and any parameters as the second argument in list form.\n *\n * ## Syntax\n *\n * `value | pipeName[:arg0[:arg1...]]`\n *\n * ### Example ([live demo](http://plnkr.co/edit/f5oyIked9M2cKzvZNKHV?p=preview))\n *\n * The `RepeatPipe` below repeats the value as many times as indicated by the first argument:\n *\n * ```\n * import {Pipe, PipeTransform} from '\\@angular/core';\n *\n * \\@Pipe({name: 'repeat'})\n * export class RepeatPipe implements PipeTransform {\n *   transform(value: any, times: number) {\n *     return value.repeat(times);\n *   }\n * }\n * ```\n *\n * Invoking `{{ 'ok' | repeat:3 }}` in a template produces `okokok`.\n *\n * \\@stable\n * @record\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ function PipeTransform() { }\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef_, deps: [Injector] },\n    { provide: PlatformRef, useExisting: PlatformRef_ },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    /**\n     * @param {?} appRef\n     */\n    function ApplicationModule(appRef) {\n    }\n    return ApplicationModule;\n}());\nApplicationModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    ApplicationRef_,\n                    { provide: ApplicationRef, useExisting: ApplicationRef_ },\n                    ApplicationInitStatus,\n                    Compiler,\n                    APP_ID_RANDOM_PROVIDER,\n                    { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                    {\n                        provide: LOCALE_ID,\n                        useFactory: _localeFactory,\n                        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                    },\n                ]\n            },] },\n];\n/** @nocollapse */\nApplicationModule.ctorParameters = function () { return [\n    { type: ApplicationRef, },\n]; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n\n/**\n * @record\n */\nfunction ViewDefinition() { }\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/**\n * @record\n */\n\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/**\n * @record\n */\n\n/** @enum {number} */\nvar OutputType = { ElementOutput: 0, DirectiveOutput: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/** @enum {number} */\nvar ViewState = {\n    BeforeFirstCheck: 1,\n    FirstCheck: 2,\n    Attached: 4,\n    ChecksEnabled: 8,\n    IsProjectedView: 16,\n    CheckProjectedView: 32,\n    CheckProjectedViews: 64,\n    Destroyed: 128,\n    CatDetectChanges: 12,\n    CatInit: 13,\n};\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/** @enum {number} */\nvar CheckType = { CheckAndUpdate: 0, CheckNoChanges: 1, };\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    ((err))[ERROR_DEBUG_CONTEXT] = context;\n    ((err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & ViewState.FirstCheck) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.index), oldValue, value, (view.state & ViewState.BeforeFirstCheck) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & ViewFlags.OnPush) {\n            currView.state |= ViewState.ChecksEnabled;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= ViewState.CheckProjectedViews;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & NodeFlags.ComponentView ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).index);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & NodeFlags.Types) {\n        case NodeFlags.TypeElement:\n            return asElementData(view, def.index).renderElement;\n        case NodeFlags.TypeText:\n            return asTextData(view, def.index).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = DepFlags.None;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n            (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n            (((renderParent.element)).componentRendererType && ((((renderParent.element)).componentRendererType)).encapsulation ===\n                ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).index).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/** @enum {number} */\nvar RenderNodeAction = { Collect: 0, AppendChild: 1, InsertBefore: 2, RemoveChild: 3, };\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === RenderNodeAction.RemoveChild) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = ((hostElDef)).index + 1;\n    var /** @type {?} */ endIndex = ((hostElDef)).index + ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & NodeFlags.TypeNgContent) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n            (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.index).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n            var /** @type {?} */ embeddedViews = ((asElementData(view, nodeDef.index).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & NodeFlags.TypeElement && !((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case RenderNodeAction.AppendChild:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case RenderNodeAction.InsertBefore:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case RenderNodeAction.RemoveChild:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case RenderNodeAction.Collect:\n            ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= NodeFlags.TypeElement;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = ((null));\n    var /** @type {?} */ name = ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = ((undefined));\n        var /** @type {?} */ suffix = ((undefined));\n        switch (bindingFlags & BindingFlags.Types) {\n            case BindingFlags.TypeElementStyle:\n                suffix = (suffixOrSecurityContext);\n                break;\n            case BindingFlags.TypeElementAttribute:\n            case BindingFlags.TypeProperty:\n                securityContext = (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: OutputType.ElementOutput,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= NodeFlags.ComponentView;\n    }\n    flags |= NodeFlags.TypeElement;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.index, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.index);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = ((binding.name));\n    switch (binding.flags & BindingFlags.Types) {\n        case BindingFlags.TypeElementAttribute:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case BindingFlags.TypeElementClass:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case BindingFlags.TypeElementStyle:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case BindingFlags.TypeProperty:\n            var /** @type {?} */ bindView = (def.flags & NodeFlags.ComponentView &&\n                binding.flags & BindingFlags.SyntheticHostProperty) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOT_CREATED$1 = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        providers[i] = provDef.flags & NodeFlags.LazyProvider ? NOT_CREATED$1 :\n            _createProviderInstance$1(data, provDef);\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & DepFlags.Value) {\n        return depDef.token;\n    }\n    if (depDef.flags & DepFlags.Optional) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & DepFlags.SkipSelf) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === NOT_CREATED$1) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & NodeFlags.Types) {\n        case NodeFlags.TypeClassProvider:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case NodeFlags.TypeFactoryProvider:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case NodeFlags.TypeUseExistingProvider:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case NodeFlags.TypeValueProvider:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = new ctor();\n            break;\n        case 1:\n            injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            break;\n        case 2:\n            injectable =\n                new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            break;\n        case 3:\n            injectable = new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            injectable = new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = factory();\n            break;\n        case 1:\n            injectable = factory(resolveNgModuleDep(ngModule, deps[0]));\n            break;\n        case 2:\n            injectable =\n                factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            break;\n        case 3:\n            injectable = factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            injectable = factory.apply(void 0, depValues);\n    }\n    return injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & NodeFlags.OnDestroy) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== NOT_CREATED$1) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = ((viewIndex)) > 0 ? embeddedViews[((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & ViewState.IsProjectedView) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= ViewState.IsProjectedView;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n        return;\n    }\n    viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n    nodeDef.flags |= NodeFlags.ProjectedTemplate;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & ViewState.IsProjectedView)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return ((componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    /**\n     * @param {?} selector\n     * @param {?} componentType\n     * @param {?} viewDefFactory\n     * @param {?} _inputs\n     * @param {?} _outputs\n     * @param {?} ngContentSelectors\n     */\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = ((((viewDef.nodes[0].element)).componentProvider)).index;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    /**\n     * @param {?} _view\n     * @param {?} _viewRef\n     * @param {?} _component\n     */\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"instance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._component; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(ComponentRef_.prototype, \"hostView\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._viewRef; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(ComponentRef_.prototype, \"changeDetectorRef\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._viewRef; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    /**\n     * @param {?} _view\n     * @param {?} _elDef\n     * @param {?} _data\n     */\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    \n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(((viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    /**\n     * @param {?} _view\n     */\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (this._view.state & ViewState.Destroyed) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = function () { this._view.state &= ~ViewState.Attached; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs.end) {\n            fs.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = function () { this._view.state |= ViewState.Attached; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    /**\n     * @param {?} _parentView\n     * @param {?} _def\n     */\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    /**\n     * @param {?} view\n     * @param {?} elDef\n     */\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: DepFlags.None, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & NodeFlags.TypeElement) {\n        var /** @type {?} */ elData = asElementData(view, def.index);\n        return ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & NodeFlags.TypeText) {\n        return asTextData(view, def.index).renderText;\n    }\n    else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n        return asProviderData(view, def.index).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    /**\n     * @param {?} delegate\n     */\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        ((renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    /**\n     * @param {?} _moduleType\n     * @param {?} _parent\n     * @param {?} _bootstrapComponents\n     * @param {?} _def\n     */\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: DepFlags.None }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: BindingFlags.TypeProperty,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: OutputType.DirectiveOutput, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= NodeFlags.TypeDirective;\n    return _def(flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= NodeFlags.TypePipe;\n    return _def(flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return def.flags & NodeFlags.LazyProvider ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).index, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & NodeFlags.DoCheck) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.index);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & NodeFlags.DoCheck) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    var /** @type {?} */ injectable;\n    switch (def.flags & NodeFlags.Types) {\n        case NodeFlags.TypeClassProvider:\n            injectable = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case NodeFlags.TypeFactoryProvider:\n            injectable = callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n            break;\n        case NodeFlags.TypeUseExistingProvider:\n            injectable = resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n            break;\n        case NodeFlags.TypeValueProvider:\n            injectable = ((providerDef)).value;\n            break;\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = new ctor();\n            break;\n        case 1:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n    return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    var /** @type {?} */ injectable;\n    switch (len) {\n        case 0:\n            injectable = factory();\n            break;\n        case 1:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            break;\n        case 2:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            break;\n        case 3:\n            injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            break;\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            injectable = factory.apply(void 0, depValues);\n    }\n    return injectable;\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & DepFlags.Value) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & DepFlags.Optional) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n        allowPrivateServices = false;\n        elDef = ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.index).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.index).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (((elDef.element)).template) {\n                        return asElementData(view, elDef.index).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = (((allowPrivateServices ? ((elDef.element)).allProviders : ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.index);\n                        if (providerData.instance === NOT_CREATED) {\n                            providerData.instance = _createProviderInstance(view, providerDef_1);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = ((viewParentEl(view)));\n        view = ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.index).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & NodeFlags.Component) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).index).componentView;\n        if (compView.def.flags & ViewFlags.OnPush) {\n            compView.state |= ViewState.ChecksEnabled;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & NodeFlags.OnChanges) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & NodeFlags.TypeElement) &&\n            i === parent_1.index + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.index + 1; i <= elDef.index + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ provider = asProviderData(view, index).instance;\n    if (provider === NOT_CREATED) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & NodeFlags.AfterContentInit) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & NodeFlags.AfterContentChecked) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & NodeFlags.AfterViewInit) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & NodeFlags.AfterViewChecked) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & NodeFlags.OnDestroy) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.index + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n                (nodeDef.flags & NodeFlags.DynamicQuery) &&\n                (((nodeDef.query)).filterId & queryIds) === ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.index) ||\n                !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n                !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = ((undefined));\n    if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n        var /** @type {?} */ elementDef = ((((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.index, elementDef.index + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).index).instance;\n    }\n    else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case QueryBindingType.First:\n                boundValue = queryList.first;\n                break;\n            case QueryBindingType.All:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & NodeFlags.TypeElement && ((nodeDef.element)).template &&\n            (((((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n                var /** @type {?} */ embeddedViews = ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        var /** @type {?} */ value = void 0;\n        switch (queryValueType) {\n            case QueryValueType.RenderElement:\n                value = asElementData(view, nodeDef.index).renderElement;\n                break;\n            case QueryValueType.ElementRef:\n                value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n                break;\n            case QueryValueType.TemplateRef:\n                value = asElementData(view, nodeDef.index).template;\n                break;\n            case QueryValueType.ViewContainerRef:\n                value = asElementData(view, nodeDef.index).viewContainer;\n                break;\n            case QueryValueType.Provider:\n                value = asProviderData(view, nodeDef.index).instance;\n                break;\n        }\n        return value;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: NodeFlags.TypeNgContent,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(NodeFlags.TypePurePipe, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(argCount) {\n    return _pureExpressionDef(NodeFlags.TypePureArray, new Array(argCount));\n}\n/**\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(NodeFlags.TypePureObject, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: BindingFlags.TypeProperty,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & NodeFlags.Types) {\n            case NodeFlags.TypePureArray:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case NodeFlags.TypePureObject:\n                value = {};\n                if (bindLen > 0)\n                    value[((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[((bindings[9].name))] = v9;\n                break;\n            case NodeFlags.TypePurePipe:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.index);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & NodeFlags.Types) {\n            case NodeFlags.TypePureArray:\n                value = values;\n                break;\n            case NodeFlags.TypePureObject:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[((bindings[i].name))] = values[i];\n                }\n                break;\n            case NodeFlags.TypePurePipe:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} constants\n * @return {?}\n */\nfunction textDef(ngContentIndex, constants) {\n    var /** @type {?} */ bindings = new Array(constants.length - 1);\n    for (var /** @type {?} */ i = 1; i < constants.length; i++) {\n        bindings[i - 1] = {\n            flags: BindingFlags.TypeProperty,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: constants[i]\n        };\n    }\n    var /** @type {?} */ flags = NodeFlags.TypeText;\n    return {\n        // will bet set by the view definition\n        index: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: constants[0] },\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.index).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        while (currentParent && i > currentParent.index + currentParent.childCount) {\n            var /** @type {?} */ newParent = currentParent.parent;\n            if (newParent) {\n                newParent.childFlags |= ((currentParent.childFlags));\n                newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n            }\n            currentParent = newParent;\n        }\n        var /** @type {?} */ node = nodes[i];\n        node.index = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        // renderParent needs to account for ng-container!\n        var /** @type {?} */ currentRenderParent = void 0;\n        if (currentParent && currentParent.flags & NodeFlags.TypeElement &&\n            !((currentParent.element)).name) {\n            currentRenderParent = currentParent.renderParent;\n        }\n        else {\n            currentRenderParent = currentParent;\n        }\n        node.renderParent = currentRenderParent;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element && node.element.template) {\n            viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & NodeFlags.CatProvider) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((((\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent)).element)).publicProviders =\n                    Object.create(/** @type {?} */ ((((currentParent)).element)).publicProviders); /** @type {?} */\n                ((((currentParent)).element)).allProviders = ((((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & NodeFlags.Component) !== 0;\n            if (!isPrivateService || isComponent) {\n                ((((((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((((\n                    // Use protoyypical inheritance to not get O(n^2) complexity...\n                    currentParent)).element)).allProviders =\n                        Object.create(/** @type {?} */ ((((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((((((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                ((((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (node.childCount) {\n            currentParent = node;\n        }\n    }\n    while (currentParent) {\n        var /** @type {?} */ newParent = currentParent.parent;\n        if (newParent) {\n            newParent.childFlags |= currentParent.childFlags;\n            newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { /** @type {?} */ return ((((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP,\n        handleEvent: handleEvent || NOOP,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.flags & NodeFlags.CatProvider) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & NodeFlags.TypeElement) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & NodeFlags.TypeContentQuery &&\n            (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.index + \"!\");\n        }\n        if (node.flags & NodeFlags.TypeViewQuery && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.index + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n        if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.index + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: ViewState.CatInit, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((((hostDef)).parent)).index).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & NodeFlags.Types) {\n            case NodeFlags.TypeElement:\n                var /** @type {?} */ el = (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = ((undefined));\n                if (nodeDef.flags & NodeFlags.ComponentView) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case NodeFlags.TypeText:\n                nodeData = (createText(view, renderHost, nodeDef));\n                break;\n            case NodeFlags.TypeClassProvider:\n            case NodeFlags.TypeFactoryProvider:\n            case NodeFlags.TypeUseExistingProvider:\n            case NodeFlags.TypeValueProvider: {\n                var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                nodeData = ({ instance: instance });\n                break;\n            }\n            case NodeFlags.TypePipe: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = ({ instance: instance });\n                break;\n            }\n            case NodeFlags.TypeDirective: {\n                var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                nodeData = ({ instance: instance });\n                if (nodeDef.flags & NodeFlags.Component) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).index).componentView;\n                    initView(compView, instance, instance);\n                }\n                break;\n            }\n            case NodeFlags.TypePureArray:\n            case NodeFlags.TypePureObject:\n            case NodeFlags.TypePurePipe:\n                nodeData = (createPureExpression(view, nodeDef));\n                break;\n            case NodeFlags.TypeContentQuery:\n            case NodeFlags.TypeViewQuery:\n                nodeData = (createQuery());\n                break;\n            case NodeFlags.TypeNgContent:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery, CheckType.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, CheckType.CheckNoChanges);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, CheckType.CheckNoChanges);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & ViewState.BeforeFirstCheck) {\n        view.state &= ~ViewState.BeforeFirstCheck;\n        view.state |= ViewState.FirstCheck;\n    }\n    else {\n        view.state &= ~ViewState.FirstCheck;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, CheckType.CheckAndUpdate);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n    callLifecycleHooksChildrenFirst(view, NodeFlags.AfterContentChecked |\n        (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n    Services.updateRenderer(view, CheckType.CheckAndUpdate);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n    callLifecycleHooksChildrenFirst(view, NodeFlags.AfterViewChecked |\n        (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n    if (view.def.flags & ViewFlags.OnPush) {\n        view.state &= ~ViewState.ChecksEnabled;\n    }\n    view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === ArgumentType.Inline) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= ViewState.CheckProjectedView;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & NodeFlags.Types) {\n        case NodeFlags.TypeElement:\n            changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case NodeFlags.TypeText:\n            changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case NodeFlags.TypeDirective:\n            changed =\n                checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        case NodeFlags.TypePureArray:\n        case NodeFlags.TypePureObject:\n        case NodeFlags.TypePurePipe:\n            changed =\n                checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    var /** @type {?} */ changed = false;\n    switch (nodeDef.flags & NodeFlags.Types) {\n        case NodeFlags.TypeElement:\n            changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n            break;\n        case NodeFlags.TypeText:\n            changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n            break;\n        case NodeFlags.TypeDirective:\n            changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            break;\n        case NodeFlags.TypePureArray:\n        case NodeFlags.TypePureObject:\n        case NodeFlags.TypePurePipe:\n            changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            break;\n    }\n    if (changed) {\n        // Update oldValues after all bindings have been updated,\n        // as a setter for a property might update other properties.\n        var /** @type {?} */ bindLen = nodeDef.bindings.length;\n        var /** @type {?} */ bindingStart = nodeDef.bindingIndex;\n        var /** @type {?} */ oldValues = view.oldValues;\n        for (var /** @type {?} */ i = 0; i < bindLen; i++) {\n            oldValues[bindingStart + i] = values[i];\n        }\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === ArgumentType.Inline) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.index), \"Query \" + (((nodeDef.query))).id + \" not dirty\", \"Query \" + (((nodeDef.query))).id + \" dirty\", (view.state & ViewState.BeforeFirstCheck) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & ViewState.Destroyed) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & NodeFlags.TypeElement) {\n            ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & NodeFlags.TypeText) {\n            ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & NodeFlags.TypeContentQuery || def.flags & NodeFlags.TypeViewQuery) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & ViewState.Destroyed) === 0) {\n                if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & ViewState.CheckProjectedViews) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & ViewState.Destroyed) === 0) {\n                if (viewState & ViewState.CheckProjectedView) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & ViewState.CheckProjectedViews) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & ViewState.Destroyed) === 0) {\n                if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & ViewState.CheckProjectedViews) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & ViewState.Destroyed) === 0) {\n                if (viewState & ViewState.CheckProjectedView) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & ViewState.CheckProjectedViews) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.index);\n            switch (checkType) {\n                case CheckType.CheckAndUpdate:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case CheckType.CheckNoChanges:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n        updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view); },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & NodeFlags.TypeElement) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).index);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & NodeFlags.TypeElement) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n                // Make all providers lazy, so that we don't get into trouble\n                // with ordering problems of providers on the same element\n                nodeDef.flags |= NodeFlags.LazyProvider;\n                var /** @type {?} */ provider = ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    if (providerOverrides.size === 0 || !hasOverrrides(def)) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function hasOverrrides(def) {\n        return def.providers.some(function (node) {\n            return !!(node.flags & NodeFlags.CatProviderNoDirective) && providerOverrides.has(node.token);\n        });\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            // Make all providers lazy, so that we don't get into trouble\n            // with ordering problems of providers on the same element\n            provider.flags |= NodeFlags.LazyProvider;\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, nodeIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & ViewState.Destroyed) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === CheckType.CheckAndUpdate) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & NodeFlags.TypeDirective) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & ViewState.Destroyed) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === CheckType.CheckAndUpdate) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & NodeFlags.CatRenderNode) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n            asPureExpressionData(view, nodeDef.index).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = ((checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n        if (nodeDef.flags & NodeFlags.TypeDirective) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & BindingFlags.TypeProperty) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n            if (!((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    ((checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     */\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n            elDef = ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = ((viewParentEl(elView)));\n                elView = ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.index).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & NodeFlags.CatProvider) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & NodeFlags.CatProvider) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & NodeFlags.TypeText) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.index;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.index;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & NodeFlags.CatRenderNode) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).index);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    /**\n     * @param {?} delegate\n     */\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    /**\n     * @param {?} delegate\n     */\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nfunction clearProviderOverrides() {\n    initServicesIfNeeded();\n    return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    /**\n     * @param {?} moduleType\n     * @param {?} _bootstrapComponents\n     * @param {?} _ngModuleDefFactory\n     */\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */ \n/** @enum {number} */\nvar AnimationMetadataType = {\n    State: 0,\n    Transition: 1,\n    Sequence: 2,\n    Group: 3,\n    Animate: 4,\n    Keyframes: 5,\n    Style: 6,\n    Trigger: 7,\n    Reference: 8,\n    AnimateChild: 9,\n    AnimateRef: 10,\n    Query: 11,\n    Stagger: 12,\n};\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: AnimationMetadataType.Trigger, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: AnimationMetadataType.Animate, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: AnimationMetadataType.Group, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: AnimationMetadataType.Sequence, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: AnimationMetadataType.Style, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: AnimationMetadataType.State, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: AnimationMetadataType.Keyframes, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: AnimationMetadataType.Transition, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationMetadata() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationTriggerMetadata() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationStateMetadata() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationTransitionMetadata() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationKeyframesSequenceMetadata() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationStyleMetadata() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationAnimateMetadata() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationSequenceMetadata() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\nfunction AnimationGroupMetadata() { }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n/**\n * @deprecated This has been renamed to `AnimationEvent`. Please import it from \\@angular/animations.\n * @record\n */\nfunction AnimationTransitionEvent() { }\n\nexports.TypeDecorator = TypeDecorator;\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Predicate = Predicate;\nexports.GetTestability = GetTestability;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.MissingTranslationStrategy = MissingTranslationStrategy;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.WtfScopeFn = WtfScopeFn;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.SecurityContext = SecurityContext;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildDecorator = ContentChildDecorator;\nexports.ContentChildren = ContentChildren;\nexports.ContentChildrenDecorator = ContentChildrenDecorator;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildDecorator = ViewChildDecorator;\nexports.ViewChildren = ViewChildren;\nexports.ViewChildrenDecorator = ViewChildrenDecorator;\nexports.Component = Component;\nexports.ComponentDecorator = ComponentDecorator;\nexports.Directive = Directive;\nexports.DirectiveDecorator = DirectiveDecorator;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.AfterContentChecked = AfterContentChecked;\nexports.AfterContentInit = AfterContentInit;\nexports.AfterViewChecked = AfterViewChecked;\nexports.AfterViewInit = AfterViewInit;\nexports.DoCheck = DoCheck;\nexports.OnChanges = OnChanges;\nexports.OnDestroy = OnDestroy;\nexports.OnInit = OnInit;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.ModuleWithProviders = ModuleWithProviders;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.SchemaMetadata = SchemaMetadata;\nexports.ViewEncapsulation = ViewEncapsulation;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.ForwardRefFn = ForwardRefFn;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.ValueProvider = ValueProvider;\nexports.ExistingProvider = ExistingProvider;\nexports.FactoryProvider = FactoryProvider;\nexports.TypeProvider = TypeProvider;\nexports.ClassProvider = ClassProvider;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ResolvedReflectiveProvider = ResolvedReflectiveProvider;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.InjectDecorator = InjectDecorator;\nexports.Inject = Inject;\nexports.OptionalDecorator = OptionalDecorator;\nexports.Optional = Optional;\nexports.InjectableDecorator = InjectableDecorator;\nexports.Injectable = Injectable;\nexports.SelfDecorator = SelfDecorator;\nexports.Self = Self;\nexports.SkipSelfDecorator = SkipSelfDecorator;\nexports.SkipSelf = SkipSelf;\nexports.HostDecorator = HostDecorator;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RendererStyleFlags2 = RendererStyleFlags2;\nexports.RendererType2 = RendererType2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectionStrategy = ChangeDetectionStrategy;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.CollectionChangeRecord = CollectionChangeRecord;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableChangeRecord = IterableChangeRecord;\nexports.IterableChanges = IterableChanges;\nexports.IterableDiffer = IterableDiffer;\nexports.IterableDifferFactory = IterableDifferFactory;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueChangeRecord = KeyValueChangeRecord;\nexports.KeyValueChanges = KeyValueChanges;\nexports.KeyValueDiffer = KeyValueDiffer;\nexports.KeyValueDifferFactory = KeyValueDifferFactory;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.PipeTransform = PipeTransform;\nexports.SimpleChange = SimpleChange;\nexports.SimpleChanges = SimpleChanges;\nexports.TrackByFunction = TrackByFunction;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ɵValueUnwrapper = ValueUnwrapper;\nexports.ɵdevModeEqual = devModeEqual;\nexports.ɵisListLikeIterable = isListLikeIterable;\nexports.ɵChangeDetectorStatus = ChangeDetectorStatus;\nexports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ɵConsole = Console;\nexports.ɵComponentFactory = ComponentFactory;\nexports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ɵReflectionCapabilities = ReflectionCapabilities;\nexports.ɵDirectRenderer = DirectRenderer;\nexports.ɵRenderDebugInfo = RenderDebugInfo;\nexports.ɵglobal = _global;\nexports.ɵlooseIdentical = looseIdentical;\nexports.ɵstringify = stringify;\nexports.ɵmakeDecorator = makeDecorator;\nexports.ɵisObservable = isObservable;\nexports.ɵisPromise = isPromise;\nexports.ɵclearProviderOverrides = clearProviderOverrides;\nexports.ɵoverrideProvider = overrideProvider;\nexports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ɵregisterModuleFactory = registerModuleFactory;\nexports.ɵArgumentType = ArgumentType;\nexports.ɵBindingFlags = BindingFlags;\nexports.ɵDepFlags = DepFlags;\nexports.ɵEMPTY_ARRAY = EMPTY_ARRAY;\nexports.ɵEMPTY_MAP = EMPTY_MAP;\nexports.ɵNodeFlags = NodeFlags;\nexports.ɵQueryBindingType = QueryBindingType;\nexports.ɵQueryValueType = QueryValueType;\nexports.ɵViewDefinition = ViewDefinition;\nexports.ɵViewFlags = ViewFlags;\nexports.ɵand = anchorDef;\nexports.ɵccf = createComponentFactory;\nexports.ɵcmf = createNgModuleFactory;\nexports.ɵcrt = createRendererType2;\nexports.ɵdid = directiveDef;\nexports.ɵeld = elementDef;\nexports.ɵelementEventFullName = elementEventFullName;\nexports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ɵinlineInterpolate = inlineInterpolate;\nexports.ɵinterpolate = interpolate;\nexports.ɵmod = moduleDef;\nexports.ɵmpd = moduleProvideDef;\nexports.ɵncd = ngContentDef;\nexports.ɵnov = nodeValue;\nexports.ɵpid = pipeDef;\nexports.ɵprd = providerDef;\nexports.ɵpad = pureArrayDef;\nexports.ɵpod = pureObjectDef;\nexports.ɵppd = purePipeDef;\nexports.ɵqud = queryDef;\nexports.ɵted = textDef;\nexports.ɵunv = unwrapValue;\nexports.ɵvid = viewDef;\nexports.AUTO_STYLE = AUTO_STYLE;\nexports.AnimationMetadata = AnimationMetadata;\nexports.AnimationTriggerMetadata = AnimationTriggerMetadata;\nexports.AnimationStateMetadata = AnimationStateMetadata;\nexports.AnimationTransitionMetadata = AnimationTransitionMetadata;\nexports.AnimationKeyframesSequenceMetadata = AnimationKeyframesSequenceMetadata;\nexports.AnimationStyleMetadata = AnimationStyleMetadata;\nexports.AnimationAnimateMetadata = AnimationAnimateMetadata;\nexports.AnimationSequenceMetadata = AnimationSequenceMetadata;\nexports.AnimationGroupMetadata = AnimationGroupMetadata;\nexports.trigger = trigger$$1;\nexports.animate = animate$$1;\nexports.group = group$$1;\nexports.sequence = sequence$$1;\nexports.style = style$$1;\nexports.state = state$$1;\nexports.keyframes = keyframes$$1;\nexports.transition = transition$$1;\nexports.AnimationTransitionEvent = AnimationTransitionEvent;\nexports.ɵx = AnimationMetadataType;\nexports.ɵz = animate$1;\nexports.ɵba = group$1;\nexports.ɵbe = keyframes$1;\nexports.ɵbb = sequence$1;\nexports.ɵbd = state$1;\nexports.ɵbc = style$1;\nexports.ɵbf = transition$1;\nexports.ɵy = trigger$1;\nexports.ɵm = _iterableDiffersFactory;\nexports.ɵn = _keyValueDiffersFactory;\nexports.ɵo = _localeFactory;\nexports.ɵg = ApplicationRef_;\nexports.ɵf = PlatformRef_;\nexports.ɵh = _appIdRandomProviderFactory;\nexports.ɵi = defaultIterableDiffers;\nexports.ɵj = defaultKeyValueDiffers;\nexports.ɵk = DefaultIterableDifferFactory;\nexports.ɵl = DefaultKeyValueDifferFactory;\nexports.ɵb = StaticInjector;\nexports.ɵc = ReflectiveInjector_;\nexports.ɵd = ReflectiveDependency;\nexports.ɵe = resolveReflectiveProviders;\nexports.ɵp = wtfEnabled;\nexports.ɵr = createScope$1;\nexports.ɵq = detectWTF;\nexports.ɵu = endTimeRange;\nexports.ɵs = leave;\nexports.ɵt = startTimeRange;\nexports.ɵa = makeParamDecorator;\nexports.ɵv = _def;\nexports.ɵw = DebugContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}